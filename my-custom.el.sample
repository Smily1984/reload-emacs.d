;; set my default font on emacs23 gui
(defun setup-emacs23-default-font (frame)
  ;;(interactive)
  (if (and (window-system frame) (>= emacs-major-version 23))
      (progn
       (set-default-font "Yahei Consolas Hybrid-10")
       (set-fontset-font (frame-parameter nil 'font)
                         'han '("Yahei Consolas Hybrid"."unicode-bmp"))
       ))
  )

(setup-emacs23-default-font (selected-frame))

(add-hook 'after-make-frame-functions
          (lambda (new-frame)
            (select-frame new-frame)
            (setup-emacs23-default-font new-frame)
            ))

;; setup java environment
(setq
 jde-jdk (quote ("1.6"))
 jde-compiler (quote ("javac" ""))
 jde-jdk-registry (quote (("1.6" . "/usr/lib/jvm/java-6-openjdk")))
 jde-global-classpath (quote ("~/.emacs.d/vendor/25jdee/jde-2.3.6/classes" "/usr/lib/jvm/java-6-openjdk/"))
 jde-sourcepath (quote ("$JAVA_HOME/src" "." "./src" ""))
 jde-compile-option-debug (quote ("all" (t nil nil)))
 )
(setq jde-mvn-nexus-url "http://192.168.208.186/nexus")

;; confluence
(setq confluence-url "http://192.168.208.186/wiki/rpc/xmlrpc")
(setq confluence-default-space-alist (list (cons confluence-url "fost")))

;; smart-find
(load "smart-find")
(setq smart-find-file-path
      '("~" "~/work" "~/gitworks"))

;; set default work directory to save desktop info.
;; set different work directory by the emacs version, for support open emacs 22 & 23 in same time.
(if (>= emacs-major-version 23)
    (setq default-directory "~/gitworks")
  (setq default-directory "~/work"))

;; set backup-directory-alist
(setq backup-directory-alist (quote (("." . "~/.emacs.d/tmp"))))

;; set user infomation
(setq user-full-name "crazycode")
(setq user-mail-address "crazycode@gmail.com")
;; set default location
(setq calendar-latitude 31.22)
(setq calendar-longitude 121.48)
(setq calendar-location-name "Shanghai")

;; USE SCIM
(require 'scim-bridge)
(require 'scim-bridge-zh-si)
;; Turn on scim-mode automatically after loading .emacs
(add-hook 'after-init-hook 'scim-mode-on)
;; Setup input status switch keystroke.
(scim-define-common-key (kbd "S-SPC") t)
;; Use C-SPC for Set Mark command
(scim-define-common-key (kbd "C-SPC") nil)
;; Use C-/ for Undo command
(scim-define-common-key (kbd "C-\\") nil)
;; Change cursor color depending on SCIM status
(setq scim-cursor-color '("red" "blue" "limegreen"))
